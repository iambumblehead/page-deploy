{
    "name" : "timeEnd",
    "type" : "calendar",
    "labelArr" : [{
        "name" : "primary",
        "type" : "viewKey",
        "key" : "viewData.labels.timeEnd_primary",

        "type" : "literal",
        "value" : "End Date"
    },{
        "name" : "secondary",
        "type" : "viewKey",
        "key" : "viewData.labels.timeEnd_secondary",

        "type" : "literal",
        "value" : "M/d/yyyy"
    }],

    "subjectData" : {
        "type" : "fn",
        "fnName" : "getDate"
    },      
    "validation" : {
        "type" : "AND",
        "validatorArr": [{
            "type": "specPattern",
            "name": "isNotEmpty",
            "errorKey" : "new_loyalty_end_date"
        },{
            "type": "specPattern",
            "name" : "isDateNotEarlier",
            "options" : {
                "date" : "yesterday"
            },
            "errorKey" : "new_loyalty_end_date_is_past"
        },{
            "type" : "OR",
            "note" : "timeEnd is empty, OR it is in future",
            "errorKey" : "end_date_depends_on_bgn_date",
            "validatorArr" : [{ 
                "type" : "specPattern",
                "name" : "isMatchingVals",
                "errorKey" : "end_date_depends_on_bgn_date",                    
                "optionArr" : [{
                    "type" : "fieldValue",
                    "fieldName" : "timeBgn",
                    "name" : "val1"
                },{
                    "type" : "literal",
                    "value" : "",
                    "name" : "val2"                            
                }]
            },{
                "type": "specPattern",
                "name" : "isDateNotEarlier",
                "errorKey" : "new_loyalty_bad_dates",
                "optionArr" : [{ 
                    "type" : "fieldValue",
                    "name" : "date",
                    "fieldName" : "timeBgn"
                }]
            }]                
        }]
    },

    "observerSpecArr" : [{
        "event" : "change",
        "type" : "localValidate",
        "field" : "timeBgn",
        "condition" : {
            "errorKey" : "do not validate",
            "type" : "specPattern",
            "name" : "isNotEmpty"
        }
    }],

    "filterArr" : [{
        "type" : "fn",
        "fnName" : "getDateFromString",
        "options" : {
            "format" : "short"
        }
    },{
        "type" : "fn",
        "fnName" : "getDateAsTimeDayEnd"
    },{
        "type" : "fn",
        "fnName" : "getDateAsTimestamp"
    }]
}
